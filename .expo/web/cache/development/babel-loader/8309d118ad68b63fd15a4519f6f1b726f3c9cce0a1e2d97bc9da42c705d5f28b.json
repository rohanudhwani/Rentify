{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState } from 'react';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ViewScreen = function ViewScreen(_ref) {\n  var route = _ref.route;\n  var property = route.params.property;\n  var _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n  var _useState = useState(1),\n    _useState2 = _slicedToArray(_useState, 2),\n    room = _useState2[0],\n    setRoom = _useState2[1];\n  return _jsxs(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(ScrollView, {\n      horizontal: true,\n      showsHorizontalScrollIndicator: false,\n      contentContainerStyle: {\n        width: width * 2,\n        justifyContent: 'center'\n      },\n      decelerationRate: \"fast\",\n      snapToInterval: width,\n      snapToAlignment: \"center\",\n      children: _jsx(View, {\n        style: {\n          width: width * 2,\n          flexDirection: 'row'\n        },\n        children: _jsx(ImageBackground, {\n          source: {\n            uri: Object.values(property.images)[room]\n          },\n          style: {\n            width: '100%',\n            height: height\n          }\n        })\n      })\n    }), _jsxs(View, {\n      style: {\n        position: 'absolute',\n        bottom: 20,\n        left: 0,\n        right: 0,\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        gap: 5\n      },\n      children: [_jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          return setRoom(0);\n        },\n        style: {\n          justifyContent: \"center\",\n          marginTop: 80\n        },\n        children: [_jsx(Image, {\n          style: {\n            width: 100,\n            height: 100,\n            borderRadius: 20,\n            borderColor: \"#5552E9\",\n            borderWidth: room == 0 ? 4 : 2\n          },\n          source: {\n            uri: Object.values(property.images)[0]\n          }\n        }), _jsx(Text, {\n          style: {\n            fontSize: 18,\n            fontWeight: 'bold',\n            maxWidth: 220,\n            color: \"white\"\n          },\n          children: Object.keys(property.images)[0]\n        })]\n      }), _jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          return setRoom(1);\n        },\n        style: {\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          marginBottom: 60\n        },\n        children: [_jsx(Image, {\n          style: {\n            width: 100,\n            height: 100,\n            borderRadius: 20,\n            borderColor: \"#5552E9\",\n            borderWidth: room == 1 ? 4 : 2\n          },\n          source: {\n            uri: Object.values(property.images)[1]\n          }\n        }), _jsx(Text, {\n          style: {\n            fontSize: 18,\n            fontWeight: 'bold',\n            maxWidth: 220,\n            color: \"white\"\n          },\n          children: Object.keys(property.images)[1]\n        })]\n      }), _jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          return setRoom(2);\n        },\n        style: {\n          justifyContent: \"center\",\n          marginTop: 80\n        },\n        children: [_jsx(Image, {\n          style: {\n            width: 100,\n            height: 100,\n            borderRadius: 20,\n            borderColor: \"#5552E9\",\n            borderWidth: room == 2 ? 4 : 2\n          },\n          source: {\n            uri: Object.values(property.images)[2]\n          }\n        }), _jsx(Text, {\n          style: {\n            fontSize: 18,\n            fontWeight: 'bold',\n            maxWidth: 220,\n            color: \"white\"\n          },\n          children: Object.keys(property.images)[2]\n        })]\n      })]\n    })]\n  });\n};\nexport default ViewScreen;","map":{"version":3,"names":["React","useState","SafeAreaView","jsx","_jsx","jsxs","_jsxs","ViewScreen","_ref","route","property","params","_Dimensions$get","Dimensions","get","width","height","_useState","_useState2","_slicedToArray","room","setRoom","style","flex","children","ScrollView","horizontal","showsHorizontalScrollIndicator","contentContainerStyle","justifyContent","decelerationRate","snapToInterval","snapToAlignment","View","flexDirection","ImageBackground","source","uri","Object","values","images","position","bottom","left","right","gap","TouchableOpacity","onPress","marginTop","Image","borderRadius","borderColor","borderWidth","Text","fontSize","fontWeight","maxWidth","color","keys","alignItems","marginBottom"],"sources":["C:/Users/rohan/Documents/React Native Projects/test/Rentify/screens/ViewScreen.jsx"],"sourcesContent":["import { Dimensions, Image, ImageBackground, ScrollView, Text, TouchableOpacity, View } from 'react-native';\r\nimport React, { useState } from 'react';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\n\r\nconst ViewScreen = ({ route }) => {\r\n    const property = route.params.property;\r\n    const { width, height } = Dimensions.get('window');\r\n\r\n\r\n\r\n    const [room, setRoom] = useState(1)\r\n\r\n    return (\r\n        <SafeAreaView style={{ flex: 1 }}>\r\n            <ScrollView horizontal showsHorizontalScrollIndicator={false} contentContainerStyle={{ width: width * 2, justifyContent: 'center' }}\r\n                decelerationRate=\"fast\"\r\n                snapToInterval={width}\r\n                snapToAlignment=\"center\"\r\n>\r\n                <View style={{ width: width * 2, flexDirection: 'row' }}>\r\n                    <ImageBackground source={{ uri: Object.values(property.images)[room] }} style={{ width: '100%', height }}>\r\n                        {/* Image Content */}\r\n                    </ImageBackground>\r\n                </View>\r\n            </ScrollView>\r\n\r\n\r\n            <View style={{ position: 'absolute', bottom: 20, left: 0, right: 0, flexDirection:\"row\", justifyContent:\"center\", gap:5 }}>\r\n                <TouchableOpacity onPress={() => setRoom(0)} style={{justifyContent:\"center\", marginTop:80}}>\r\n                    <Image style={{ width: 100, height: 100, borderRadius: 20, borderColor: \"#5552E9\", borderWidth: room==0 ? 4 : 2 }} source={{ uri: Object.values(property.images)[0] }} />\r\n                    <Text style={{ fontSize: 18, fontWeight: 'bold', maxWidth: 220, color:\"white\" }}>{Object.keys(property.images)[0]}</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity onPress={() => setRoom(1)} style={{justifyContent:\"center\", alignItems:\"center\", marginBottom:60}}>\r\n                    <Image style={{ width: 100, height: 100, borderRadius: 20, borderColor: \"#5552E9\", borderWidth: room==1 ? 4 :  2 }} source={{ uri: Object.values(property.images)[1] }} />\r\n                    <Text style={{ fontSize: 18, fontWeight: 'bold', maxWidth: 220, color:\"white\" }}>{Object.keys(property.images)[1]}</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity onPress={() => setRoom(2)} style={{justifyContent:\"center\", marginTop:80}}>\r\n                    <Image style={{ width: 100, height: 100, borderRadius: 20, borderColor: \"#5552E9\", borderWidth: room==2 ? 4 :  2 }} source={{ uri: Object.values(property.images)[2] }} />\r\n                    <Text style={{ fontSize: 18, fontWeight: 'bold', maxWidth: 220, color:\"white\" }}>{Object.keys(property.images)[2]}</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </SafeAreaView>\r\n    );\r\n};\r\n\r\nexport default ViewScreen;\r\n"],"mappings":";;;;;;;;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,gCAAgC;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE9D,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAAC,IAAA,EAAkB;EAAA,IAAZC,KAAK,GAAAD,IAAA,CAALC,KAAK;EACvB,IAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAACD,QAAQ;EACtC,IAAAE,eAAA,GAA0BC,UAAU,CAACC,GAAG,CAAC,QAAQ,CAAC;IAA1CC,KAAK,GAAAH,eAAA,CAALG,KAAK;IAAEC,MAAM,GAAAJ,eAAA,CAANI,MAAM;EAIrB,IAAAC,SAAA,GAAwBhB,QAAQ,CAAC,CAAC,CAAC;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA5BG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EAEpB,OACIZ,KAAA,CAACJ,YAAY;IAACoB,KAAK,EAAE;MAAEC,IAAI,EAAE;IAAE,CAAE;IAAAC,QAAA,GAC7BpB,IAAA,CAACqB,UAAU;MAACC,UAAU;MAACC,8BAA8B,EAAE,KAAM;MAACC,qBAAqB,EAAE;QAAEb,KAAK,EAAEA,KAAK,GAAG,CAAC;QAAEc,cAAc,EAAE;MAAS,CAAE;MAChIC,gBAAgB,EAAC,MAAM;MACvBC,cAAc,EAAEhB,KAAM;MACtBiB,eAAe,EAAC,QAAQ;MAAAR,QAAA,EAExBpB,IAAA,CAAC6B,IAAI;QAACX,KAAK,EAAE;UAAEP,KAAK,EAAEA,KAAK,GAAG,CAAC;UAAEmB,aAAa,EAAE;QAAM,CAAE;QAAAV,QAAA,EACpDpB,IAAA,CAAC+B,eAAe;UAACC,MAAM,EAAE;YAAEC,GAAG,EAAEC,MAAM,CAACC,MAAM,CAAC7B,QAAQ,CAAC8B,MAAM,CAAC,CAACpB,IAAI;UAAE,CAAE;UAACE,KAAK,EAAE;YAAEP,KAAK,EAAE,MAAM;YAAEC,MAAM,EAANA;UAAO;QAAE,CAExF;MAAC,CAChB;IAAC,CACC,CAAC,EAGbV,KAAA,CAAC2B,IAAI;MAACX,KAAK,EAAE;QAAEmB,QAAQ,EAAE,UAAU;QAAEC,MAAM,EAAE,EAAE;QAAEC,IAAI,EAAE,CAAC;QAAEC,KAAK,EAAE,CAAC;QAAEV,aAAa,EAAC,KAAK;QAAEL,cAAc,EAAC,QAAQ;QAAEgB,GAAG,EAAC;MAAE,CAAE;MAAArB,QAAA,GACtHlB,KAAA,CAACwC,gBAAgB;QAACC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAM1B,OAAO,CAAC,CAAC,CAAC;QAAA,CAAC;QAACC,KAAK,EAAE;UAACO,cAAc,EAAC,QAAQ;UAAEmB,SAAS,EAAC;QAAE,CAAE;QAAAxB,QAAA,GACxFpB,IAAA,CAAC6C,KAAK;UAAC3B,KAAK,EAAE;YAAEP,KAAK,EAAE,GAAG;YAAEC,MAAM,EAAE,GAAG;YAAEkC,YAAY,EAAE,EAAE;YAAEC,WAAW,EAAE,SAAS;YAAEC,WAAW,EAAEhC,IAAI,IAAE,CAAC,GAAG,CAAC,GAAG;UAAE,CAAE;UAACgB,MAAM,EAAE;YAAEC,GAAG,EAAEC,MAAM,CAACC,MAAM,CAAC7B,QAAQ,CAAC8B,MAAM,CAAC,CAAC,CAAC;UAAE;QAAE,CAAE,CAAC,EACzKpC,IAAA,CAACiD,IAAI;UAAC/B,KAAK,EAAE;YAAEgC,QAAQ,EAAE,EAAE;YAAEC,UAAU,EAAE,MAAM;YAAEC,QAAQ,EAAE,GAAG;YAAEC,KAAK,EAAC;UAAQ,CAAE;UAAAjC,QAAA,EAAEc,MAAM,CAACoB,IAAI,CAAChD,QAAQ,CAAC8B,MAAM,CAAC,CAAC,CAAC;QAAC,CAAO,CAAC;MAAA,CAC3G,CAAC,EACnBlC,KAAA,CAACwC,gBAAgB;QAACC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAM1B,OAAO,CAAC,CAAC,CAAC;QAAA,CAAC;QAACC,KAAK,EAAE;UAACO,cAAc,EAAC,QAAQ;UAAE8B,UAAU,EAAC,QAAQ;UAAEC,YAAY,EAAC;QAAE,CAAE;QAAApC,QAAA,GAChHpB,IAAA,CAAC6C,KAAK;UAAC3B,KAAK,EAAE;YAAEP,KAAK,EAAE,GAAG;YAAEC,MAAM,EAAE,GAAG;YAAEkC,YAAY,EAAE,EAAE;YAAEC,WAAW,EAAE,SAAS;YAAEC,WAAW,EAAEhC,IAAI,IAAE,CAAC,GAAG,CAAC,GAAI;UAAE,CAAE;UAACgB,MAAM,EAAE;YAAEC,GAAG,EAAEC,MAAM,CAACC,MAAM,CAAC7B,QAAQ,CAAC8B,MAAM,CAAC,CAAC,CAAC;UAAE;QAAE,CAAE,CAAC,EAC1KpC,IAAA,CAACiD,IAAI;UAAC/B,KAAK,EAAE;YAAEgC,QAAQ,EAAE,EAAE;YAAEC,UAAU,EAAE,MAAM;YAAEC,QAAQ,EAAE,GAAG;YAAEC,KAAK,EAAC;UAAQ,CAAE;UAAAjC,QAAA,EAAEc,MAAM,CAACoB,IAAI,CAAChD,QAAQ,CAAC8B,MAAM,CAAC,CAAC,CAAC;QAAC,CAAO,CAAC;MAAA,CAC3G,CAAC,EACnBlC,KAAA,CAACwC,gBAAgB;QAACC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAM1B,OAAO,CAAC,CAAC,CAAC;QAAA,CAAC;QAACC,KAAK,EAAE;UAACO,cAAc,EAAC,QAAQ;UAAEmB,SAAS,EAAC;QAAE,CAAE;QAAAxB,QAAA,GACxFpB,IAAA,CAAC6C,KAAK;UAAC3B,KAAK,EAAE;YAAEP,KAAK,EAAE,GAAG;YAAEC,MAAM,EAAE,GAAG;YAAEkC,YAAY,EAAE,EAAE;YAAEC,WAAW,EAAE,SAAS;YAAEC,WAAW,EAAEhC,IAAI,IAAE,CAAC,GAAG,CAAC,GAAI;UAAE,CAAE;UAACgB,MAAM,EAAE;YAAEC,GAAG,EAAEC,MAAM,CAACC,MAAM,CAAC7B,QAAQ,CAAC8B,MAAM,CAAC,CAAC,CAAC;UAAE;QAAE,CAAE,CAAC,EAC1KpC,IAAA,CAACiD,IAAI;UAAC/B,KAAK,EAAE;YAAEgC,QAAQ,EAAE,EAAE;YAAEC,UAAU,EAAE,MAAM;YAAEC,QAAQ,EAAE,GAAG;YAAEC,KAAK,EAAC;UAAQ,CAAE;UAAAjC,QAAA,EAAEc,MAAM,CAACoB,IAAI,CAAChD,QAAQ,CAAC8B,MAAM,CAAC,CAAC,CAAC;QAAC,CAAO,CAAC;MAAA,CAC3G,CAAC;IAAA,CACjB,CAAC;EAAA,CACG,CAAC;AAEvB,CAAC;AAED,eAAejC,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}