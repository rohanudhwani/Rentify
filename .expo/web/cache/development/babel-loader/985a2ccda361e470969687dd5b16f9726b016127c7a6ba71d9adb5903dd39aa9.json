{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { DetailScreen, FilterScreen, HomeScreen, LocationScreen, LoginScreen, OnBoardingScreen, SignUpScreen, UserScreen, ViewScreen, WishlistScreen } from \"./screens\";\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useFonts, Inter_400Regular, Inter_500Medium, Inter_700Bold } from '@expo-google-fonts/inter';\nimport { useEffect, useState } from 'react';\nimport BottomTab from \"./component/BottomTab\";\nimport { ref, onValue } from 'firebase/database';\nimport { db } from \"./firebase\";\nimport { Provider } from 'react-redux';\nimport store from \"./redux/store\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar userRef = ref(db, '/properties');\nvar Stack = createNativeStackNavigator();\nvar MyComponent = function MyComponent(_ref) {\n  var setActiveScreen = _ref.setActiveScreen;\n  var navigation = useNavigation();\n  useEffect(function () {\n    var unsubscribe = navigation.addListener('state', function () {\n      var currentScreen = navigation.getCurrentRoute().name;\n      setActiveScreen(currentScreen);\n    });\n    return unsubscribe;\n  }, [navigation]);\n};\nexport default function App() {\n  var _useFonts = useFonts({\n      Inter_400Regular: Inter_400Regular,\n      Inter_500Medium: Inter_500Medium,\n      Inter_700Bold: Inter_700Bold\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 2),\n    fontsLoaded = _useFonts2[0],\n    fontError = _useFonts2[1];\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    activeScreen = _useState2[0],\n    setActiveScreen = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    propertiesData = _useState4[0],\n    setPropertiesData = _useState4[1];\n  onValue(userRef, function (snapshot) {\n    var data = snapshot.val();\n    setPropertiesData(data);\n  }, {\n    onlyOnce: true\n  });\n  if (!fontsLoaded && !fontError) {\n    return null;\n  }\n  return _jsx(Provider, {\n    store: store,\n    children: _jsxs(NavigationContainer, {\n      children: [_jsx(MyComponent, {\n        setActiveScreen: setActiveScreen\n      }), _jsxs(Stack.Navigator, {\n        screenOptions: {\n          headerShown: false\n        },\n        children: [_jsx(Stack.Screen, {\n          name: \"OnBoarding\",\n          component: OnBoardingScreen\n        }), _jsx(Stack.Screen, {\n          name: \"SignUp\",\n          component: SignUpScreen\n        }), _jsx(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen\n        }), _jsx(Stack.Screen, {\n          name: \"Home\",\n          children: function children(props) {\n            return _jsx(HomeScreen, _objectSpread(_objectSpread({}, props), {}, {\n              propertiesData: propertiesData\n            }));\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Filter\",\n          component: FilterScreen\n        }), _jsx(Stack.Screen, {\n          name: \"Detail\",\n          component: DetailScreen\n        }), _jsx(Stack.Screen, {\n          name: \"Location\",\n          component: LocationScreen\n        }), _jsx(Stack.Screen, {\n          name: \"View\",\n          component: ViewScreen\n        }), _jsx(Stack.Screen, {\n          name: \"Wishlist\",\n          component: WishlistScreen\n        }), _jsx(Stack.Screen, {\n          name: \"User\",\n          component: UserScreen\n        })]\n      }), activeScreen !== \"SignUp\" && activeScreen !== \"Login\" && activeScreen !== \"OnBoarding\" && activeScreen !== \"Filter\" && activeScreen !== \"Detail\" && activeScreen !== \"Location\" && activeScreen !== \"View\" && _jsx(BottomTab, {\n        activeScreen: activeScreen\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["StatusBar","StyleSheet","Text","View","DetailScreen","FilterScreen","HomeScreen","LocationScreen","LoginScreen","OnBoardingScreen","SignUpScreen","UserScreen","ViewScreen","WishlistScreen","NavigationContainer","useNavigation","createNativeStackNavigator","useFonts","Inter_400Regular","Inter_500Medium","Inter_700Bold","useEffect","useState","BottomTab","ref","onValue","db","Provider","store","jsx","_jsx","jsxs","_jsxs","userRef","Stack","MyComponent","_ref","setActiveScreen","navigation","unsubscribe","addListener","currentScreen","getCurrentRoute","name","App","_useFonts","_useFonts2","_slicedToArray","fontsLoaded","fontError","_useState","_useState2","activeScreen","_useState3","_useState4","propertiesData","setPropertiesData","snapshot","data","val","onlyOnce","children","Navigator","screenOptions","headerShown","Screen","component","props","_objectSpread","styles","create"],"sources":["C:/Users/rohan/Documents/React Native Projects/test/Rentify/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { DetailScreen, FilterScreen, HomeScreen, LocationScreen, LoginScreen, OnBoardingScreen, SignUpScreen, UserScreen, ViewScreen, WishlistScreen } from './screens';\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useFonts, Inter_400Regular, Inter_500Medium, Inter_700Bold } from '@expo-google-fonts/inter';\nimport { useEffect, useState } from 'react';\nimport BottomTab from './component/BottomTab';\nimport { ref, onValue } from 'firebase/database';\nimport { db } from './firebase';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nconst userRef = ref(db, '/properties');\n\n\n\n\nconst Stack = createNativeStackNavigator()\n\n\n\n\nconst MyComponent = ({ setActiveScreen }) => {\n  const navigation = useNavigation()\n\n  useEffect(() => {\n    const unsubscribe = navigation.addListener('state', () => {\n      const currentScreen = navigation.getCurrentRoute().name\n      setActiveScreen(currentScreen)\n    });\n\n    return unsubscribe\n  }, [navigation])\n}\n\n\nexport default function App() {\n\n  let [fontsLoaded, fontError] = useFonts({\n    Inter_400Regular, Inter_500Medium, Inter_700Bold,\n  });\n\n  const [activeScreen, setActiveScreen] = useState(\"\")\n\n\n  const [propertiesData, setPropertiesData] = useState(null);\n\n  // Attach an asynchronous callback to read the data\n  onValue(userRef, (snapshot) => {\n    const data = snapshot.val();\n    setPropertiesData(data);\n  }, {\n    onlyOnce: true, // This ensures the callback is triggered only once\n  });\n\n  if (!fontsLoaded && !fontError) {\n    return null;\n  }\n\n  return (\n    <Provider store={store}>\n      <NavigationContainer>\n        <MyComponent setActiveScreen={setActiveScreen} />\n        <Stack.Navigator screenOptions={{ headerShown: false }}>\n          <Stack.Screen name=\"OnBoarding\" component={OnBoardingScreen} />\n          <Stack.Screen name=\"SignUp\" component={SignUpScreen} />\n          <Stack.Screen name=\"Login\" component={LoginScreen} />\n          <Stack.Screen name=\"Home\">\n            {(props) => <HomeScreen {...props} propertiesData={propertiesData} />}\n          </Stack.Screen>\n          <Stack.Screen name=\"Filter\" component={FilterScreen} />\n          <Stack.Screen name=\"Detail\" component={DetailScreen} />\n          <Stack.Screen name=\"Location\" component={LocationScreen} />\n          <Stack.Screen name=\"View\" component={ViewScreen} />\n          <Stack.Screen name=\"Wishlist\" component={WishlistScreen} />\n          <Stack.Screen name=\"User\" component={UserScreen} />\n        </Stack.Navigator>\n\n\n        {activeScreen !== \"SignUp\" && activeScreen !== \"Login\" && activeScreen !== \"OnBoarding\" && activeScreen !== \"Filter\" && activeScreen !== \"Detail\" && activeScreen !== \"Location\" && activeScreen !== \"View\" && (\n          <BottomTab activeScreen={activeScreen} />\n        )}\n      </NavigationContainer>\n    </Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n\n});\n"],"mappings":";;;;AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE5C,SAASC,YAAY,EAAEC,YAAY,EAAEC,UAAU,EAAEC,cAAc,EAAEC,WAAW,EAAEC,gBAAgB,EAAEC,YAAY,EAAEC,UAAU,EAAEC,UAAU,EAAEC,cAAc;AACpJ,SAASC,mBAAmB,EAAEC,aAAa,QAAQ,0BAA0B;AAC7E,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,SAASC,QAAQ,EAAEC,gBAAgB,EAAEC,eAAe,EAAEC,aAAa,QAAQ,0BAA0B;AACrG,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,SAAS;AAChB,SAASC,GAAG,EAAEC,OAAO,QAAQ,mBAAmB;AAChD,SAASC,EAAE;AACX,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,KAAK;AAAsB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAElC,IAAMC,OAAO,GAAGT,GAAG,CAACE,EAAE,EAAE,aAAa,CAAC;AAKtC,IAAMQ,KAAK,GAAGlB,0BAA0B,CAAC,CAAC;AAK1C,IAAMmB,WAAW,GAAG,SAAdA,WAAWA,CAAAC,IAAA,EAA4B;EAAA,IAAtBC,eAAe,GAAAD,IAAA,CAAfC,eAAe;EACpC,IAAMC,UAAU,GAAGvB,aAAa,CAAC,CAAC;EAElCM,SAAS,CAAC,YAAM;IACd,IAAMkB,WAAW,GAAGD,UAAU,CAACE,WAAW,CAAC,OAAO,EAAE,YAAM;MACxD,IAAMC,aAAa,GAAGH,UAAU,CAACI,eAAe,CAAC,CAAC,CAACC,IAAI;MACvDN,eAAe,CAACI,aAAa,CAAC;IAChC,CAAC,CAAC;IAEF,OAAOF,WAAW;EACpB,CAAC,EAAE,CAACD,UAAU,CAAC,CAAC;AAClB,CAAC;AAGD,eAAe,SAASM,GAAGA,CAAA,EAAG;EAE5B,IAAAC,SAAA,GAA+B5B,QAAQ,CAAC;MACtCC,gBAAgB,EAAhBA,gBAAgB;MAAEC,eAAe,EAAfA,eAAe;MAAEC,aAAa,EAAbA;IACrC,CAAC,CAAC;IAAA0B,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAFGG,WAAW,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EAI3B,IAAAI,SAAA,GAAwC5B,QAAQ,CAAC,EAAE,CAAC;IAAA6B,UAAA,GAAAJ,cAAA,CAAAG,SAAA;IAA7CE,YAAY,GAAAD,UAAA;IAAEd,eAAe,GAAAc,UAAA;EAGpC,IAAAE,UAAA,GAA4C/B,QAAQ,CAAC,IAAI,CAAC;IAAAgC,UAAA,GAAAP,cAAA,CAAAM,UAAA;IAAnDE,cAAc,GAAAD,UAAA;IAAEE,iBAAiB,GAAAF,UAAA;EAGxC7B,OAAO,CAACQ,OAAO,EAAE,UAACwB,QAAQ,EAAK;IAC7B,IAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAG,CAAC,CAAC;IAC3BH,iBAAiB,CAACE,IAAI,CAAC;EACzB,CAAC,EAAE;IACDE,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,IAAI,CAACZ,WAAW,IAAI,CAACC,SAAS,EAAE;IAC9B,OAAO,IAAI;EACb;EAEA,OACEnB,IAAA,CAACH,QAAQ;IAACC,KAAK,EAAEA,KAAM;IAAAiC,QAAA,EACrB7B,KAAA,CAAClB,mBAAmB;MAAA+C,QAAA,GAClB/B,IAAA,CAACK,WAAW;QAACE,eAAe,EAAEA;MAAgB,CAAE,CAAC,EACjDL,KAAA,CAACE,KAAK,CAAC4B,SAAS;QAACC,aAAa,EAAE;UAAEC,WAAW,EAAE;QAAM,CAAE;QAAAH,QAAA,GACrD/B,IAAA,CAACI,KAAK,CAAC+B,MAAM;UAACtB,IAAI,EAAC,YAAY;UAACuB,SAAS,EAAEzD;QAAiB,CAAE,CAAC,EAC/DqB,IAAA,CAACI,KAAK,CAAC+B,MAAM;UAACtB,IAAI,EAAC,QAAQ;UAACuB,SAAS,EAAExD;QAAa,CAAE,CAAC,EACvDoB,IAAA,CAACI,KAAK,CAAC+B,MAAM;UAACtB,IAAI,EAAC,OAAO;UAACuB,SAAS,EAAE1D;QAAY,CAAE,CAAC,EACrDsB,IAAA,CAACI,KAAK,CAAC+B,MAAM;UAACtB,IAAI,EAAC,MAAM;UAAAkB,QAAA,EACtB,SAAAA,SAACM,KAAK;YAAA,OAAKrC,IAAA,CAACxB,UAAU,EAAA8D,aAAA,CAAAA,aAAA,KAAKD,KAAK;cAAEZ,cAAc,EAAEA;YAAe,EAAE,CAAC;UAAA;QAAA,CACzD,CAAC,EACfzB,IAAA,CAACI,KAAK,CAAC+B,MAAM;UAACtB,IAAI,EAAC,QAAQ;UAACuB,SAAS,EAAE7D;QAAa,CAAE,CAAC,EACvDyB,IAAA,CAACI,KAAK,CAAC+B,MAAM;UAACtB,IAAI,EAAC,QAAQ;UAACuB,SAAS,EAAE9D;QAAa,CAAE,CAAC,EACvD0B,IAAA,CAACI,KAAK,CAAC+B,MAAM;UAACtB,IAAI,EAAC,UAAU;UAACuB,SAAS,EAAE3D;QAAe,CAAE,CAAC,EAC3DuB,IAAA,CAACI,KAAK,CAAC+B,MAAM;UAACtB,IAAI,EAAC,MAAM;UAACuB,SAAS,EAAEtD;QAAW,CAAE,CAAC,EACnDkB,IAAA,CAACI,KAAK,CAAC+B,MAAM;UAACtB,IAAI,EAAC,UAAU;UAACuB,SAAS,EAAErD;QAAe,CAAE,CAAC,EAC3DiB,IAAA,CAACI,KAAK,CAAC+B,MAAM;UAACtB,IAAI,EAAC,MAAM;UAACuB,SAAS,EAAEvD;QAAW,CAAE,CAAC;MAAA,CACpC,CAAC,EAGjByC,YAAY,KAAK,QAAQ,IAAIA,YAAY,KAAK,OAAO,IAAIA,YAAY,KAAK,YAAY,IAAIA,YAAY,KAAK,QAAQ,IAAIA,YAAY,KAAK,QAAQ,IAAIA,YAAY,KAAK,UAAU,IAAIA,YAAY,KAAK,MAAM,IACzMtB,IAAA,CAACP,SAAS;QAAC6B,YAAY,EAAEA;MAAa,CAAE,CACzC;IAAA,CACkB;EAAC,CACd,CAAC;AAEf;AAEA,IAAMiB,MAAM,GAAGpE,UAAU,CAACqE,MAAM,CAAC,CAEjC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}